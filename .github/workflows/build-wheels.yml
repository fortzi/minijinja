name: Build Wheels

on:
  push:
    tags: "*"
  workflow_dispatch:

permissions:
  contents: read

jobs:
  macos:
    name: macOS Wheels (universal2)
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: x64
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          args: --release --target universal2-apple-darwin --out dist -m minijinja-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-macos
          path: dist

  linux:
    name: Linux Wheels
    runs-on: ubuntu-latest
    strategy:
      matrix:
        target: [i686, x86_64, armv7l, aarch64]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.9"
      - uses: dtolnay/rust-toolchain@stable
      - name: Wipe Config
        run: |
          rm .cargo/config.toml
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m minijinja-py/Cargo.toml --interpreter "3.9"
          manylinux: auto
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.target }}
          path: dist

  windows:
    name: Windows Wheels
    runs-on: windows-latest
    strategy:
      matrix:
        target: [x64, x86]

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v4
        with:
          python-version: "3.10"
          architecture: ${{ matrix.target }}
      - uses: dtolnay/rust-toolchain@stable
      - name: Build wheels
        uses: PyO3/maturin-action@v1
        with:
          target: ${{ matrix.target }}
          args: --release --out dist -m minijinja-py/Cargo.toml
      - name: Upload wheels
        uses: actions/upload-artifact@v4
        with:
          name: wheels-windows-${{ matrix.target }}
          path: dist

  publish-gemfury:
    name: Publish to Gemfury
    runs-on: ubuntu-latest
    needs:
      - windows
      - linux
      - macos
    env:
      MATURIN_REPOSITORY_URL: https://pypi.fury.io/tymely/
      MATURIN_PYPI_TOKEN: ${{ secrets.OPS_GEMFURY_PUSH_TOKEN }}
      MATURIN_PASSWORD: ${{ secrets.OPS_GEMFURY_TYPI_PASSWORD }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: wheels-macos
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-i686
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-x86_64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-armv7l
      - uses: actions/download-artifact@v4
        with:
          name: wheels-linux-aarch64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows-x64
      - uses: actions/download-artifact@v4
        with:
          name: wheels-windows-x86
      - name: Publish to Gemfury
        uses: PyO3/maturin-action@v1
        with:
          command: upload
          args: --skip-existing minijinja-*
